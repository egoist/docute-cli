#!/usr/bin/env node
import path from 'path'
import meow from 'meow'
import chalk from 'chalk'
import copy from 'graceful-copy'
import pathExists from 'path-exists'

const cli = meow({
  description: false,
  help: `
    Generate docs folder

    Usage: ${chalk.yellow('docute init [dir] [options]')}

    Options:
      ${chalk.yellow('--docute-version, --dv')}       Use specified docute version
      ${chalk.yellow('--help, -h')}                   Print help

    Examples:
      docute init --docute-version beta     ${chalk.dim('# use beta version of docute')}
  `
}, {
  alias: {
    f: 'force',
    dv: 'docute-version',
    h: 'help'
  }
})

function ownDir(...args) {
  return path.join(__dirname, '../../', ...args)
}

function cwd(...args) {
  return path.resolve(process.cwd(), ...args)
}

async function run() {
  const dir = cli.input[0] || './docs'
  const exists = await pathExists(cwd(dir))
  console.log()
  if (exists && !cli.flags.force) {
    return console.log(chalk.red(`  > dir ${dir} already exists, use \`docute init ${dir} --force\` to override it\n`))
  }
  await copy(
    ownDir('./template'),
    cwd(dir),
    {
      data: {
        version: cli.flags.docuteVersion || 'latest'
      }
    }
  )
  console.log(chalk.green(`  > Successfully generated boilerplates for docs!`))
  console.log(`  > Run \`docute ${dir}\` to preview docs`)
  console.log()
}

run()

